// Generated by CoffeeScript 1.6.3
var Buffer, build_body, debug, exports, http;

http = require('http');

Buffer = require('buffer').Buffer;

debug = require('debug')('node-baidu-ping');

exports = module.exports = function(title, urls) {
  var body, options, req;
  body = build_body(title, urls);
  debug('body', body);
  options = {
    host: 'ping.baidu.com',
    path: '/ping/RPC2',
    port: 80,
    method: "POST",
    headers: {
      'Content-Type': 'text/xml',
      'User-Agent': 'request',
      'Content-Length': Buffer.byteLength(body)
    }
  };
  req = http.request(options, function(res) {
    var buffer;
    debug('response status code', res.statusCode);
    buffer = '';
    res.on('data', function(data) {
      return buffer += data;
    });
    return res.on('end', function() {
      return debug('response', buffer);
    });
  });
  req.write(body);
  return req.end();
};

build_body = function(title, urls) {
  var body, url, _i, _len;
  body = [];
  body.push('<?xml version="1.0" encoding="UTF-8"?>');
  body.push('<methodCall>');
  body.push('<methodName>weblogUpdates.extendedPing</methodName>');
  body.push('<params>');
  body.push("<param><value><string>" + title + "</string></value></param>");
  for (_i = 0, _len = urls.length; _i < _len; _i++) {
    url = urls[_i];
    body.push("<param><value><string>" + url + "</string></value></param>");
  }
  body.push('</params>');
  body.push('</methodCall>');
  return body.join('');
};
